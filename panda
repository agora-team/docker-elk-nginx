#!/usr/bin/env bash
_VERSION='0.1.1'
_ME=$(basename "${0}")
BANNER=$(cat <<HEREDOC

Docker ELK Setup

Version: ${_VERSION}

Usage:
  ${_ME} <command> [--command-options] [<arguments>]
  ${_ME} -h | --help
  ${_ME} --version

Options:
  -h --help  Display this help information.
  --version  Display version information.

Help:
  ${_ME} help [<command>]

HEREDOC
)

source ./tools/pandalib.sh

VIENNA_RELEASE='https://github.com/ViennaRNA/ViennaRNA/releases/download/v2.3.5/ViennaRNA-2.3.5.tar.gz'
VIENNA_PREFIX=`pwd`/.build

__sigint () {
  printf '\n'
  _abort 'Cancelled'
}
trap __sigint SIGINT


#================================================
desc 'dev:gen_htpasswd' <<HEREDOC
Usage:
  ${_ME} dev:gen_htpasswd

Description:
  Generates htpasswd for nginx.
HEREDOC
dev:gen_htpasswd () {
  printf "${SETUP_USERNAME}:$(openssl passwd -crypt ${SETUP_PASSWORD})\n" >> ./etc/.htpasswd
}

desc 'dev:dehydrate' <<HEREDOC
Usage:
  ${_ME} dev:dehydrate

Description:
  Get the letsencrypt certificates.
HEREDOC
dev:dehydrate () {
  cd etc
  if [ ! -d 'dehydrated' ]; then
    git clone https://github.com/lukas2511/dehydrated
    cd dehydrated
    mkdir hooks
    git clone https://github.com/kappataumu/letsencrypt-cloudflare-hook hooks/cloudflare
    pip install -r hooks/cloudflare/requirements.txt
  else
    cd dehydrated
  fi

  echo "export CF_EMAIL=${CF_EMAIL}" > config
  echo "export CF_KEY=${CF_KEY}" >> config
  echo "export CF_DNS_SERVERS='8.8.8.8 8.8.4.4'" >> config
  echo "CONTACT_EMAIL=${SETUP_CONTACT_EMAIL}" >> config
  echo "HOOK='hooks/cloudflare/hook.py'" >> config
  echo "CHALLENGETYPE=dns-01" >> config

  ./dehydrated --register --accept-terms
  ./dehydrated -c -d ${SERVER_DOMAIN}
  cp ./certs/$SERVER_DOMAIN/fullchain.pem ../
  cp ./certs/$SERVER_DOMAIN/privkey.pem ../
}
#================================================
_main
